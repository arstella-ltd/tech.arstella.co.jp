---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Pagination from '../../components/Pagination.astro';
import { getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = await getCollection('blog', ({ data }) => {
    return data.draft !== true;
  });
  
  const posts = allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  
  return paginate(posts, { pageSize: 10 });
};

const { page } = Astro.props as { page: any };
const currentPage = page.currentPage;
---

<BaseLayout title={currentPage > 1 ? `Blog - ページ ${currentPage}` : 'Blog'} description="Arstella Inc.の技術ブログ記事一覧">
  <div class="mx-auto max-w-7xl px-4 py-8 sm:px-6 sm:py-12 lg:px-8 lg:py-16">
    <div class="mb-8 sm:mb-12">
      <h1 class="text-3xl sm:text-4xl font-bold text-gray-900">Blog</h1>
      <p class="mt-2 sm:mt-4 text-base sm:text-lg text-gray-600">技術的な知見や経験を共有しています</p>
    </div>

    <div class="grid gap-6 sm:gap-8">
      {page.data.map((post: any) => (
        <article class="border-b pb-6 sm:pb-8 last:border-0">
          <div class="flex items-start justify-between">
            <div class="flex-1">
              <div class="flex flex-wrap items-center gap-2 text-xs text-gray-500">
                <time datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toLocaleDateString('ja-JP')}
                </time>
                {post.data.category && (
                  <a href={`/categories/${encodeURIComponent(post.data.category)}/`} class="rounded-full bg-gray-100 px-2 py-0.5 sm:px-3 sm:py-1 hover:bg-gray-200 transition-colors">
                    {post.data.category}
                  </a>
                )}
              </div>
              <div class="group mt-3">
                <h2 class="text-xl sm:text-2xl font-semibold text-gray-900 group-hover:text-indigo-600 transition-colors">
                  <a href={`/blog/${post.slug}`}>
                    {post.data.title}
                  </a>
                </h2>
                <p class="mt-2 sm:mt-3 text-sm sm:text-base text-gray-600 line-clamp-2">
                  {post.data.description}
                </p>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="mt-3 sm:mt-4 flex flex-wrap gap-1.5 sm:gap-2">
                    {post.data.tags.map((tag: string) => (
                      <a href={`/tags/${encodeURIComponent(tag)}/`} class="inline-flex items-center rounded-full bg-indigo-100 px-2 py-0.5 sm:px-2.5 text-xs font-medium text-indigo-800 hover:bg-indigo-200 transition-colors">
                        #{tag}
                      </a>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
          <div class="mt-4">
            <a href={`/blog/${post.slug}`} class="inline-flex items-center text-sm sm:text-base font-semibold text-indigo-600 hover:text-indigo-500 transition-colors group">
              続きを読む
              <svg class="ml-1 h-4 w-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
          </div>
        </article>
      ))}
    </div>

    {/* ページネーション */}
    <Pagination page={page} baseUrl="/blog/" />
  </div>
</BaseLayout>