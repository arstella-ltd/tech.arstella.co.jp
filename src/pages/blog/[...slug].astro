---
import BaseLayout from '../../layouts/BaseLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import AuthorInfo from '../../components/AuthorInfo.astro';
import { getCollection, getEntry } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings: rawHeadings } = await post.render();

// 著者情報を取得
let author = null;
if (post.data.author) {
  const authorEntry = await getEntry('authors', post.data.author.id);
  if (authorEntry) {
    author = authorEntry.data;
  }
}

// 見出しから#記号を除去
const headings = rawHeadings?.map(heading => ({
  ...heading,
  text: heading.text.replace(/\s*#\s*$/, '').trim()
})) || [];
---

<BaseLayout 
  title={post.data.title} 
  description={post.data.description}
  image={post.data.heroImage}
  article={true}
  publishedTime={post.data.pubDate.toISOString()}
  modifiedTime={post.data.updatedDate?.toISOString()}
  tags={post.data.tags}
>
  <div class="mx-auto max-w-7xl px-4 py-8 sm:px-6 sm:py-12 lg:px-8 lg:py-16">
    <!-- モバイル用の目次（折りたたみ式） -->
    {headings && headings.length > 0 && (
      <details class="mb-8 rounded-lg border border-gray-200 bg-gray-50 p-4 lg:hidden">
        <summary class="cursor-pointer font-semibold text-gray-900 marker:text-gray-500">
          目次
        </summary>
        <nav class="mt-4">
          <TableOfContents headings={headings} />
        </nav>
      </details>
    )}
    
    <div class="grid grid-cols-1 gap-8 lg:grid-cols-[1fr,280px] lg:gap-12">
      <!-- メインコンテンツ -->
      <article class="min-w-0">
        <header class="mb-8">
          <div class="mb-4 flex flex-wrap items-center gap-2 text-xs sm:gap-x-4 sm:text-sm text-gray-500">
            <time datetime={post.data.pubDate.toISOString()}>
              {post.data.pubDate.toLocaleDateString('ja-JP')}
            </time>
            {post.data.updatedDate && (
              <>
                <span>•</span>
                <time datetime={post.data.updatedDate.toISOString()}>
                  更新: {post.data.updatedDate.toLocaleDateString('ja-JP')}
                </time>
              </>
            )}
            {post.data.category && (
              <>
                <span>•</span>
                <a href={`/categories/${encodeURIComponent(post.data.category)}/`} class="rounded-full bg-gray-100 px-2 py-0.5 text-xs sm:px-3 sm:py-1 sm:text-sm hover:bg-gray-200 transition-colors">
                  {post.data.category}
                </a>
              </>
            )}
          </div>
          <h1 class="text-2xl font-bold text-gray-900 sm:text-3xl lg:text-4xl">{post.data.title}</h1>
          <p class="mt-4 text-base text-gray-600 sm:text-lg">{post.data.description}</p>
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="mt-4 flex flex-wrap gap-2">
              {post.data.tags.map((tag) => (
                <a href={`/tags/${encodeURIComponent(tag)}/`} class="inline-flex items-center rounded-full bg-indigo-100 px-3 py-1 text-sm font-medium text-indigo-800 hover:bg-indigo-200 transition-colors">
                  #{tag}
                </a>
              ))}
            </div>
          )}
        </header>

        {post.data.heroImage && (
          <div class="mb-8 overflow-hidden rounded-lg">
            <img
              src={post.data.heroImage}
              alt=""
              class="w-full h-auto object-cover aspect-[16/9]"
              loading="lazy"
              decoding="async"
            />
          </div>
        )}

        <div class="prose prose-gray max-w-none prose-sm sm:prose-base lg:prose-lg">
          <Content />
        </div>

        <footer class="mt-12 sm:mt-16 border-t pt-6 sm:pt-8">
          <nav class="flex flex-col space-y-4 sm:flex-row sm:items-center sm:justify-between sm:space-y-0">
            <a href="/blog" class="inline-flex items-center text-indigo-600 hover:text-indigo-500 transition-colors">
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
              ブログ一覧に戻る
            </a>
            <a 
              href={`https://github.com/arstella-ltd/tech.arstella.co.jp/edit/main/src/content/blog/${post.id}`}
              target="_blank"
              rel="noopener"
              class="inline-flex items-center text-sm text-gray-500 hover:text-gray-700 transition-colors"
            >
              <svg class="mr-2 h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd" />
              </svg>
              GitHubで編集
            </a>
          </nav>
        </footer>
      </article>

      <!-- サイドバー -->
      <aside class="hidden lg:block">
        <div class="sticky top-8 space-y-6">
          {/* 著者情報 */}
          <AuthorInfo author={author} />
          
          {/* 目次 */}
          {headings && headings.length > 0 && (
            <TableOfContents headings={headings} />
          )}
        </div>
      </aside>
    </div>
    
    <!-- モバイル用の著者情報（記事下部） -->
    {author && (
      <div class="mt-12 border-t pt-8 lg:hidden">
        <AuthorInfo author={author} />
      </div>
    )}
  </div>
</BaseLayout>