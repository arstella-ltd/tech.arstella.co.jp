---
import BaseLayout from '../../layouts/BaseLayout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import AuthorInfo from '../../components/AuthorInfo.astro';
import { getCollection, getEntry } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings: rawHeadings } = await post.render();

// 著者情報を取得
let author = null;
if (post.data.author) {
  const authorEntry = await getEntry('authors', post.data.author.id);
  if (authorEntry) {
    author = authorEntry.data;
  }
}

// 見出しから#記号を除去
const headings = rawHeadings?.map(heading => ({
  ...heading,
  text: heading.text.replace(/\s*#\s*$/, '').trim()
})) || [];
---

<BaseLayout 
  title={post.data.title} 
  description={post.data.description}
  image={post.data.heroImage}
  article={true}
  publishedTime={post.data.pubDate.toISOString()}
  modifiedTime={post.data.updatedDate?.toISOString()}
  tags={post.data.tags}
>
  <div class="mx-auto max-w-7xl px-4 py-16 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 gap-8 lg:grid-cols-[1fr,280px] lg:gap-12">
      <!-- メインコンテンツ -->
      <article class="min-w-0">
        <header class="mb-8">
          <div class="mb-4 flex items-center gap-x-4 text-sm text-gray-500">
            <time datetime={post.data.pubDate.toISOString()}>
              {post.data.pubDate.toLocaleDateString('ja-JP')}
            </time>
            {post.data.updatedDate && (
              <>
                <span>•</span>
                <time datetime={post.data.updatedDate.toISOString()}>
                  更新: {post.data.updatedDate.toLocaleDateString('ja-JP')}
                </time>
              </>
            )}
            {post.data.category && (
              <>
                <span>•</span>
                <span class="rounded-full bg-gray-100 px-3 py-1">
                  {post.data.category}
                </span>
              </>
            )}
          </div>
          <h1 class="text-4xl font-bold text-gray-900">{post.data.title}</h1>
          <p class="mt-4 text-lg text-gray-600">{post.data.description}</p>
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="mt-4 flex flex-wrap gap-2">
              {post.data.tags.map((tag) => (
                <span class="inline-flex items-center rounded-full bg-indigo-100 px-3 py-1 text-sm font-medium text-indigo-800">
                  {tag}
                </span>
              ))}
            </div>
          )}
        </header>

        {post.data.heroImage && (
          <div class="mb-8">
            <img
              src={post.data.heroImage}
              alt=""
              class="w-full rounded-lg"
            />
          </div>
        )}

        <div class="prose prose-lg prose-gray max-w-none">
          <Content />
        </div>

        <footer class="mt-16 border-t pt-8">
          <nav class="flex items-center justify-between">
            <a href="/blog" class="text-indigo-600 hover:text-indigo-500">
              ← ブログ一覧に戻る
            </a>
            <a 
              href={`https://github.com/arstella-ltd/tech.arstella.co.jp/edit/main/src/content/blog/${post.id}`}
              target="_blank"
              rel="noopener"
              class="text-gray-500 hover:text-gray-700"
            >
              GitHubで編集
            </a>
          </nav>
        </footer>
      </article>

      <!-- サイドバー -->
      <aside class="hidden lg:block">
        <div class="sticky top-8 space-y-6">
          {/* 著者情報 */}
          <AuthorInfo author={author} />
          
          {/* 目次 */}
          {headings && headings.length > 0 && (
            <TableOfContents headings={headings} />
          )}
        </div>
      </aside>
    </div>
  </div>
</BaseLayout>