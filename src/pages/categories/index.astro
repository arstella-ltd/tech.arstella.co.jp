---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// すべての公開済みブログ記事を取得
const posts = (await getCollection('blog', ({ data }) => {
  return !data.draft;
}));

// カテゴリーごとに記事をグループ化
const categoriesMap = new Map<string, typeof posts>();

posts.forEach(post => {
  const category = post.data.category;
  if (!categoriesMap.has(category)) {
    categoriesMap.set(category, []);
  }
  categoriesMap.get(category)!.push(post);
});

// カテゴリーを配列に変換して記事数でソート
const categories = Array.from(categoriesMap.entries())
  .map(([name, posts]) => ({ name, count: posts.length }))
  .sort((a, b) => b.count - a.count);
---

<BaseLayout title="カテゴリー一覧" description="ブログ記事のカテゴリー一覧">
  <div class="mx-auto max-w-7xl px-4 py-16 sm:px-6 lg:px-8">
    <div class="mb-12">
      <h1 class="text-4xl font-bold text-gray-900">カテゴリー一覧</h1>
      <p class="mt-4 text-lg text-gray-600">カテゴリーごとに記事を探す</p>
    </div>
    
    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {categories.map(({ name, count }) => (
        <a 
          href={`/categories/${encodeURIComponent(name)}/`} 
          class="group relative rounded-lg border border-gray-300 bg-white p-6 shadow-sm transition-all hover:-translate-y-1 hover:shadow-lg"
        >
          <div>
            <h2 class="text-xl font-semibold text-gray-900 group-hover:text-indigo-600">
              {name}
            </h2>
            <p class="mt-2 text-sm text-gray-500">
              {count}件の記事
            </p>
          </div>
          <div class="mt-4">
            <span class="text-sm font-medium text-indigo-600 group-hover:text-indigo-500">
              記事を見る →
            </span>
          </div>
        </a>
      ))}
    </div>
  </div>
</BaseLayout>