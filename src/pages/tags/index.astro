---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// すべての公開済みブログ記事を取得
const posts = (await getCollection('blog', ({ data }) => {
  return !data.draft;
}));

// タグごとに記事をグループ化
const tagsMap = new Map<string, typeof posts>();

posts.forEach(post => {
  post.data.tags.forEach(tag => {
    if (!tagsMap.has(tag)) {
      tagsMap.set(tag, []);
    }
    tagsMap.get(tag)!.push(post);
  });
});

// タグを配列に変換して記事数でソート
const tags = Array.from(tagsMap.entries())
  .map(([name, posts]) => ({ name, count: posts.length }))
  .sort((a, b) => b.count - a.count);
---

<BaseLayout title="タグ一覧" description="ブログ記事のタグ一覧">
  <div class="mx-auto max-w-7xl px-4 py-16 sm:px-6 lg:px-8">
    <div class="mb-12">
      <h1 class="text-4xl font-bold text-gray-900">タグ一覧</h1>
      <p class="mt-4 text-lg text-gray-600">タグから記事を探す</p>
    </div>
    
    <div class="flex flex-wrap gap-4">
      {tags.map(({ name, count }) => (
        <a 
          href={`/tags/${encodeURIComponent(name)}/`} 
          class="group inline-flex items-center gap-2 rounded-full border border-gray-300 bg-white px-4 py-2 shadow-sm transition-all hover:-translate-y-0.5 hover:border-indigo-300 hover:shadow-md"
        >
          <span class="font-medium text-gray-900 group-hover:text-indigo-600">
            #{name}
          </span>
          <span class="rounded-full bg-gray-100 px-2 py-0.5 text-xs font-semibold text-gray-600 group-hover:bg-indigo-100 group-hover:text-indigo-700">
            {count}
          </span>
        </a>
      ))}
    </div>
  </div>
</BaseLayout>