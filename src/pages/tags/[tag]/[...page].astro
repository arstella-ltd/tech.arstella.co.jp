---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Pagination from '../../../components/Pagination.astro';
import { getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const posts = await getCollection('blog', ({ data }) => {
    return !data.draft;
  });
  
  const tags = [...new Set(posts.flatMap(post => post.data.tags))];
  
  return tags.flatMap(tag => {
    const tagPosts = posts
      .filter(post => post.data.tags.includes(tag))
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
    
    return paginate(tagPosts, {
      params: { tag },
      pageSize: 10
    });
  });
};

const { tag } = Astro.params;
const { page } = Astro.props as { page: any };
const currentPage = page.currentPage;
---

<BaseLayout title={`#${tag}${currentPage > 1 ? ` - ページ ${currentPage}` : ''}`} description={`タグ「${tag}」の記事一覧`}>
  <div class="mx-auto max-w-7xl px-4 py-16 sm:px-6 lg:px-8">
    <div class="mb-12">
      <a href="/tags/" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 text-sm mb-4 inline-block">
        ← タグ一覧へ
      </a>
      <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100">タグ: #{tag}</h1>
      <p class="mt-4 text-lg text-gray-600 dark:text-gray-400">{page.total}件の記事</p>
    </div>

    <div class="grid gap-8">
      {page.data.map((post: any) => (
        <article class="border-b pb-8 last:border-0">
          <div class="flex items-start justify-between">
            <div class="flex-1">
              <div class="flex items-center gap-x-4 text-xs text-gray-500 dark:text-gray-400">
                <time datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toLocaleDateString('ja-JP')}
                </time>
                {post.data.category && (
                  <a href={`/categories/${encodeURIComponent(post.data.category)}/`} class="rounded-full bg-gray-100 dark:bg-gray-700 px-3 py-1 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors">
                    {post.data.category}
                  </a>
                )}
              </div>
              <div class="group mt-3">
                <h2 class="text-2xl font-semibold text-gray-900 dark:text-gray-100 group-hover:text-gray-600 dark:group-hover:text-gray-300">
                  <a href={`/blog/${post.slug}`}>
                    {post.data.title}
                  </a>
                </h2>
                <p class="mt-3 text-gray-600 dark:text-gray-400 line-clamp-2">
                  {post.data.description}
                </p>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="mt-4 flex flex-wrap gap-2">
                    {post.data.tags.map((t: string) => (
                      <a 
                        href={`/tags/${encodeURIComponent(t)}/`} 
                        class={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium transition-colors ${
                          t === tag 
                            ? 'bg-indigo-600 text-white' 
                            : 'bg-indigo-100 text-indigo-800 hover:bg-indigo-200'
                        }`}
                      >
                        #{t}
                      </a>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
          <div class="mt-4">
            <a href={`/blog/${post.slug}`} class="text-base font-semibold text-indigo-600 hover:text-indigo-500">
              続きを読む →
            </a>
          </div>
        </article>
      ))}
    </div>

    {/* ページネーション */}
    <Pagination page={page} baseUrl={`/tags/${encodeURIComponent(tag || '')}/`} />
  </div>
</BaseLayout>

